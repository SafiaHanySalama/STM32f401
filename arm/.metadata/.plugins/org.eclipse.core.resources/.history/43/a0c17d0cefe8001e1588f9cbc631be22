/******************************************************************************
 *
 * Module: 
 *
 * File Name: systick.c
 *
 * Description: 
 *
 * Author: Safia Hany
 * 
 * Date:  Mar 23, 2024
 ******************************************************************************/

#include "systick.h"

#define SYSTICK_BASE_ADDRESS		0xE000E010

/* SysTick Control / Status Register Definitions */
#define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysTick CTRL: COUNTFLAG Position */
#define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysTick CTRL: COUNTFLAG Mask */

#define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysTick CTRL: CLKSOURCE Position */
#define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysTick CTRL: CLKSOURCE Mask */

#define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysTick CTRL: TICKINT Position */
#define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysTick CTRL: TICKINT Mask */

#define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysTick CTRL: ENABLE Position */
#define SysTick_CTRL_ENABLE_Msk            (1UL << SysTick_CTRL_ENABLE_Pos)               /*!< SysTick CTRL: ENABLE Mask */


typedef struct
{
	uint32 CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Register */
	uint32 LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register       */
	uint32 VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register      */
	uint32 CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register        */
} SysTick_Peri_t;

typedef SysTick_Peri_t *const Systick =  (volatile SysTick_Peri_t *)SYSTICK_BASE_ADDRESS;

static systick_cbf_t APP_cbf= NULL_PTR;

void SYSTICK_config(void)
{
	Systick -> CTRL = SysTick_CTRL_CLKSOURCE_Msk |
			SysTick_CTRL_TICKINT_Msk   |
			SysTick_CTRL_ENABLE_Msk;
}
void setCall_Back(systick_cbf_t cbf)
{
	if(cbf != NULL_PTR)
	{
		APP_cbf = cbf;
	}
}
